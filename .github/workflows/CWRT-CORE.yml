#云编译公用核心
name: CWRT-CORE

on:
  workflow_call:
    inputs:
      CWRT_BRANCH:
        required: true
        type: string
      CWRT_TARGET:
        required: true
        type: string
      CWRT_THEME:
        required: true
        type: string
      CWRT_NAME:
        required: true
        type: string
      CWRT_URL:
        required: true
        type: string
      CWRT_PW:
        required: true
        type: string
      CWRT_IP:
        required: true
        type: string
      CWRT_CFG:
        required: false
        default: 'false'
        type: string

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  CWRT_BRANCH: ${{inputs.CWRT_BRANCH}}
  CWRT_TARGET: ${{inputs.CWRT_TARGET}}
  CWRT_THEME: ${{inputs.CWRT_THEME}}
  CWRT_NAME: ${{inputs.CWRT_NAME}}
  CWRT_URL: ${{inputs.CWRT_URL}}
  CWRT_PW: ${{inputs.CWRT_PW}}
  CWRT_IP: ${{inputs.CWRT_IP}}
  CWRT_CFG: ${{inputs.CWRT_CFG}}

jobs:
  cwrt_core:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Projects
        uses: actions/checkout@main

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q)
          sudo -E apt -yqq update
          sudo -E apt -yqq purge $(sed -n "1{s/\r$//g;p;q}" $GITHUB_WORKSPACE/Depends.txt)
          sudo -E apt -yqq full-upgrade
          sudo -E apt -yqq install $(sed -n "2{s/\r$//g;p;q}" $GITHUB_WORKSPACE/Depends.txt)
          sudo -E apt -yqq autoremove --purge
          sudo -E apt -yqq autoclean
          sudo -E apt -yqq clean
          sudo -E systemctl daemon-reload
          sudo -E timedatectl set-timezone "Asia/Shanghai"
          sudo -E rm -rf $(sed -n "3{s/\r$//g;p;q}" $GITHUB_WORKSPACE/Depends.txt)

      - name: Initialization Values
        run: |
          export CWRT_DATE=$(TZ=UTC-8 date +"%y.%m.%d_%H.%M.%S")
          export CWRT_SOURCE=$(echo $CWRT_URL | cut -d '/' -f 5-)
          export CWRT_TYPE=$(sed -n "1{s/^#//;s/\r$//;p;q}" $GITHUB_WORKSPACE/Config/$CWRT_TARGET.txt)

          echo "CWRT_SOURCE=$CWRT_SOURCE" >> $GITHUB_ENV
          echo "CWRT_TARGET=$CWRT_TARGET" >> $GITHUB_ENV
          echo "CWRT_DATE=$CWRT_DATE" >> $GITHUB_ENV
          echo "CWRT_TYPE=$CWRT_TYPE" >> $GITHUB_ENV
          echo "CWRT_PW=$CWRT_PW" >> $GITHUB_ENV
          echo "CWRT_IP=$CWRT_IP" >> $GITHUB_ENV

      - name: Clone CWRT Code
        run: |
          git clone --depth=1 --single-branch --branch "$CWRT_BRANCH" $CWRT_URL ./cwrt/

      - name: Update Feeds
        run: |
          cd ./cwrt/

          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Check Scripts
        run: |
          find ./ -maxdepth 2 -type f -iregex ".*\(txt\|sh\)$" -exec dos2unix {} \; -exec chmod +x {} \;

      - name: Custom Scripts
        run: |
          cd ./cwrt/

          $GITHUB_WORKSPACE/Scripts/Settings.sh

          cd ./package/

          $GITHUB_WORKSPACE/Scripts/Packages.sh
          $GITHUB_WORKSPACE/Scripts/Handles.sh

      - name: Custom Settings
        run: |
          cd ./cwrt/

          rm -rf ./tmp* ./.config*

          cat $GITHUB_WORKSPACE/Config/$CWRT_TARGET.txt $GITHUB_WORKSPACE/Config/General.txt $GITHUB_WORKSPACE/Config/Package.txt >> .config

          echo "CONFIG_PACKAGE_luci-theme-$CWRT_THEME=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-$CWRT_THEME-config=y" >> .config

          make defconfig

      - name: Cleanup Toolchain
        if: env.CWRT_CFG == 'false'
        run: |
          cd ./cwrt/

          make dirclean

      - name: Download Packages
        if: env.CWRT_CFG == 'false'
        run: |
          cd ./cwrt/

          make download -j$(nproc)

      - name: Compile Firmware
        if: env.CWRT_CFG == 'false'
        run: |
          cd ./cwrt/

          make -j$(nproc) || make -j1 V=s

      - name: Machine Information
        run: |
          cd ./cwrt/

          echo "======================="
          lscpu | egrep "name|Core|Thread"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1
          echo "======================="

      - name: Package Firmware
        run: |
          cd ./cwrt/ && mkdir ./upload/

          cp -rf ./.config ./upload/Config_"$CWRT_TARGET"_"$CWRT_SOURCE"_"$CWRT_DATE".txt

          if [[ $CWRT_CFG == 'false' ]]; then
            rm -rf $(find ./bin/targets/ -iregex ".*\(json\|manifest\|buildinfo\|sha256sums\|packages\)$")

            for var in $CWRT_TYPE ; do
              for file in $(find ./bin/targets/ -type f -iname "*$var*.*") ; do
                export ext=$(basename "$file" | cut -d '.' -f 2-)
                export name=$(basename "$file" | cut -d '.' -f 1 | grep -io "\($var\).*")
                export new_file="$CWRT_SOURCE"_"$name"_"$CWRT_DATE"."$ext"
                mv -f "$file" ./upload/"$new_file"
              done
            done
          fi

      - name: Release Firmware
        uses: softprops/action-gh-release@master
        with:
          tag_name: ${{env.CWRT_TARGET}}_${{env.CWRT_SOURCE}}_${{env.CWRT_DATE}}
          files: ./cwrt/upload/*.*
          body: |
            这是个平台固件包，内含多个设备！
            请注意选择你需要的设备固件！
            不要问，更就完事了！

            源码：${{env.CWRT_SOURCE}}
            平台：${{env.CWRT_TARGET}}
            设备：${{env.CWRT_TYPE}}
            密码：${{env.CWRT_PW}}
            地址：${{env.CWRT_IP}}

      - name: Delete Old Releases
        if: env.CWRT_CFG == 'false'
        uses: dev-drprasad/delete-older-releases@master
        with:
          keep_latest: 2
          delete_tags: true

      - name: Delete Old Workflows
        uses: Mattraks/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 1
